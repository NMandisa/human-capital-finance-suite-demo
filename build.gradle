plugins {
    id 'java'
    id 'idea'
    id 'eclipse'
    id 'project-report'
    id 'ear'
}

description = 'human-capital-finance-suite'
group = 'za.co.mkhungo'
version = '0.0.1-SNAPSHOT'

java{
    withSourcesJar()
    withJavadocJar()
}

allprojects {
    group = 'za.co.mkhungo'
    version = '0.0.1-SNAPSHOT'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'eclipse'
    apply plugin: 'maven-publish'

    java {
        withSourcesJar()
        withJavadocJar()
    }

    repositories {
        // Use Maven Central for resolving dependencies.
        mavenCentral()
    }

    dependencies {
       /* implementation project (':hcfs-core')
        implementation project (':hcfs-util')
        implementation project (':hcfs-web-services')
        implementation project (':hcfs-facade')
        implementation project (':hcfs-services')
        implementation project ('hcfs-services:finance-service')
        implementation project ('cfs-services:employee-service')
        implementation project (':hcfs-services:benefits-service')
        implementation project (':hcfs-services:performance-service')
        implementation project (':hcfs-web-services:employee-api')
        implementation project (':hcfs-web-services:payroll-api')
        implementation project (':hcfs-web-services:benefits-api')
        implementation project (':hcfs-web-services:performance-api')*/
        /* jars */
        /*earlib project(path: ':hcfs-util')
        earlib project(path: ':hcfs-util', configuration: 'compile')

        earlib project(path: ':hcfs-core')
        earlib project(path: ':hcfs-core', configuration: 'compile')

        earlib project(path: ':hcfs-facade')
        earlib project(path: ':hcfs-facade', configuration: 'compile')*/

        /*earlib project(path: ':hcfs-services')
        earlib project(path: ':hcfs-services', configuration: 'compile')

        *//* wars *//*
        deploy project(path: ':war1', configuration: 'archives')
        earlib project(path: ':war1', configuration: 'earshared')

        deploy project(path: ':war2', configuration: 'archives')
        earlib project(path: ':war2', configuration: 'earshared')*/

        implementation(group: 'org.springframework', name: 'spring-core', version: '6.1.0') {
            exclude(module: 'commons-logging')
        }
        implementation(group: 'org.springframework', name: 'spring-context', version: '6.1.0') {
            exclude(module: 'commons-logging')
        }
        implementation(group: 'org.springframework', name: 'spring-beans', version: '6.1.0') {
            exclude(module: 'commons-logging')
        }
        implementation 'org.apache.logging.log4j:log4j-api:2.20.0'
        implementation (group: 'org.apache.logging.log4j',name:'log4j-core',version: '2.20.0'){
            exclude(module: 'mail')
            exclude(module: 'jms')
            exclude(module: 'jmxtools')
            exclude(module: 'jmxri')
        }
        implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.20.0'
        implementation group: 'org.apache.logging.log4j', name: 'log4j-jcl', version: '2.23.1'
        implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.7'

        implementation group: 'org.slf4j', name: 'jcl-over-slf4j', version: '2.0.7'
        implementation group: 'org.slf4j', name: 'slf4j-log4j12', version: '2.0.7'
        testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.10.3'
        testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.10.3'
        testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.10.3'
        testImplementation group: 'org.springframework', name: 'spring-test', version: '6.1.10'
        testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.10.3'
        testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '5.12.0'

        compileOnly 'org.projectlombok:lombok:1.18.30'
        annotationProcessor 'org.projectlombok:lombok:1.18.30'

        testCompileOnly 'org.projectlombok:lombok:1.18.30'
        testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'
    }

// Apply a specific Java toolchain to ease working on different environments.
/*    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(20)
        }
    }*/

    htmlDependencyReport {
    projects = project.allprojects
    }
}
